{"version":3,"file":"component---src-pages-playground-js-1451fafa926fe2017f88.js","mappings":"4kCAkBe,SAASA,aACtB,OACE,wCACE,oBAAC,4CAAD,KACE,+CACA,4BAAMC,KAAK,cAAcC,QAAQ,gDAEnC,gDACA,4HAEE,+BAFF,2GAImB,IACjB,yBACEC,OAAO,SACPC,UAAU,OACVC,KAAK,kIAHP,SAKK,KAEP,2BAAKD,UAAWE,4DAAAA,IACd,oBAACC,KAAD,CACEC,MAAM,gBACNC,KAAMC,kEAAAA,EACNC,YAAY,wBACZC,OAAO,WAET,oBAACL,KAAD,CACEC,MAAM,wBACNC,KAAMI,4EAAAA,EACNF,YAAY,+CACZC,OAAO,WAET,oBAACL,KAAD,CACEC,MAAM,eACNC,KAAMK,oEAAAA,EACNH,YAAY,6BACZC,OAAO,aAOjB,IAAMG,gBAAkB,CACtBC,EAAG,CAAEP,KAAMQ,OAAQT,MAAOS,OAAQC,UAAWC,uCAAAA,GAAKR,YAAaM,OAAQL,OAAQK,QAC/EG,cAAe,CAAC,cAGlB,SAASb,KAAKc,OAEZ,OADAC,EAAAA,uCAAAA,IAASD,MAAON,iBAEd,2BAAKX,UAAWmB,4DAAAA,IACd,0BAAInB,UAAWI,4DAAAA,IAAQa,MAAMb,OAC7B,4BAAMJ,UAAWQ,4DAAAA,GAAjB,MAA6BS,MAAMT,QACnC,yBAAGR,UAAWO,4DAAAA,aAAcU,MAAMV,aAClC,4BACEa,QAAS,mBACPC,KAAKJ,MAAMZ,OAEbL,UAAW,QAAUsB,4DAAAA,IACrB,oBAAC,8DAAD,CAAiBlB,MAAM,gBAAgBmB,KAAMC,+DAAAA,OAE/C,oBAAC,0DAAD,CAAMxB,UAAWyB,4DAAAA,GAAQC,GAAI,oBAAsBC,mBAAmBV,MAAMZ,OAA5E,oB,6KChFC,IAAIH,EAAQ,kCACRiB,EAAO,iCACPf,EAAQ,kCACRkB,EAAO,iCACPG,EAAS,mCACTjB,EAAS,oC,mBCNpB,0wB,kBCAA,2iC,mBCAA","sources":["webpack://your-first-rpg/./src/pages/playground.js","webpack://your-first-rpg/./src/styles/Playground.module.scss","webpack://your-first-rpg/./src/boiler/playground/adLibs.js","webpack://your-first-rpg/./src/boiler/playground/darkWalk.js","webpack://your-first-rpg/./src/boiler/playground/memorizationGame.js"],"sourcesContent":["import adLibs from '!!raw-loader!../boiler/playground/adLibs'\r\nimport darkWalk from '!!raw-loader!../boiler/playground/darkWalk'\r\nimport memorizationGame from '!!raw-loader!../boiler/playground/memorizationGame'\r\nimport Link from '../components/TranslatedLink'\r\nimport {\r\n  games,\r\n  game,\r\n  title,\r\n  description,\r\n  play,\r\n  source,\r\n  author\r\n} from '../styles/Playground.module.scss'\r\nimport { faPlayCircle } from '@fortawesome/free-solid-svg-icons'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { Helmet } from 'react-helmet'\r\nimport { sanitize, ANY } from 'sandhands'\r\n\r\nexport default function Playground() {\r\n  return (\r\n    <>\r\n      <Helmet>\r\n        <title>Playground</title>\r\n        <meta name=\"description\" content=\"Play the RPG games other people have made!\" />\r\n      </Helmet>\r\n      <h1>The Playground</h1>\r\n      <p>\r\n        Here are a bunch of games to try ðŸ™‚ Try clicking \"See the code!\" to see how they were coded.\r\n        <br />\r\n        Once you make your own game you can submit a request to have your game featured on this\r\n        website by going{' '}\r\n        <a\r\n          target=\"_blank\"\r\n          className=\"bold\"\r\n          href=\"https://github.com/L1lith/Your-First-RPG/issues/new?assignees=&labels=rpg+display&template=display-your-project-on-the-site.md\">\r\n          here.\r\n        </a>{' '}\r\n      </p>\r\n      <div className={games}>\r\n        <Game\r\n          title=\"Funny Ad Libs\"\r\n          code={adLibs}\r\n          description=\"A silly story creator\"\r\n          author=\"Lilith\"\r\n        />\r\n        <Game\r\n          title=\"The Memorization Game\"\r\n          code={memorizationGame}\r\n          description=\"See how many words you can remember in a row\"\r\n          author=\"Lilith\"\r\n        />\r\n        <Game\r\n          title=\"A Dark Night\"\r\n          code={darkWalk}\r\n          description=\"Take a walk in a dark city\"\r\n          author=\"Lilith\"\r\n        />\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nconst gamePropsFormat = {\r\n  _: { code: String, title: String, thumbnail: ANY, description: String, author: String },\r\n  optionalProps: ['thumbnail']\r\n}\r\n\r\nfunction Game(props) {\r\n  sanitize(props, gamePropsFormat)\r\n  return (\r\n    <div className={game}>\r\n      <h2 className={title}>{props.title}</h2>\r\n      <span className={author}>By {props.author}</span>\r\n      <p className={description}>{props.description}</p>\r\n      <span\r\n        onClick={() => {\r\n          eval(props.code)\r\n        }}\r\n        className={'icon ' + play}>\r\n        <FontAwesomeIcon title=\"Play the game\" icon={faPlayCircle} />\r\n      </span>\r\n      <Link className={source} to={'/rpg/editor?code=' + encodeURIComponent(props.code)}>\r\n        See the code!\r\n      </Link>\r\n    </div>\r\n  )\r\n}\r\n","// extracted by mini-css-extract-plugin\nexport var games = \"Playground-module--games--5vn7+\";\nexport var game = \"Playground-module--game--Dmcqy\";\nexport var title = \"Playground-module--title--MVDqW\";\nexport var play = \"Playground-module--play--uKQW9\";\nexport var source = \"Playground-module--source--qcaqE\";\nexport var author = \"Playground-module--author--THkUX\";","export default \"const verb = prompt(\\\"Pick a verb\\\")\\r\\nconst verb2 = prompt(\\\"Pick another verb\\\")\\r\\nconst adjective = prompt(\\\"Pick an adjective\\\")\\r\\nconst adjective2 = prompt(\\\"Pick another adjective\\\")\\r\\nconst creature = prompt(\\\"Pick a creature\\\")\\r\\nconst creatureName = prompt(\\\"What is the name of the \\\" + creature + \\\"?\\\")\\r\\nconst noun = prompt(\\\"Pick a noun\\\")\\r\\nconst noun2 = prompt(\\\"Pick another noun\\\")\\r\\n\\r\\n// We can use the ` symbol to make strings that let us fill them in automatically like a template\\r\\nalert(`There once was a ${creature} called ${creatureName} that lived in a ${noun}. ${creatureName} was a very ${adjective} ${creature}. One day ${creatureName} was walking down the street when they saw a ${noun2}. It was so ${adjective2} that everyone died. The end.`)\\r\\n\";","export default \"alert(\\\"Dark concrete pillars pierce the night sky. You're walking down a lazy river dividing the looming city in half. It feels cold so you take a seat on a bench and put your arms inside your coat. It's been many years since moved out, missing the voice of your mother and the warmth of her home.\\\")\\r\\nconst doing = prompt('A dark figure approaches you from the side and sits beside you. They\\\\'re tapping a cane on the ground rhythmically. \\\"What are you doing here?\\\"')\\r\\nalert('They reach out with fingers twisted with age, and point at you. \\\"You used to be different\\\" they uttered in a low, raspy voice \\\"Your light has grown dim\\\"')\\r\\nalert(\\\"This is not news to you. As the years passed, the last of your happy memories have been fading away.\\\")\\r\\nconst want = prompt('Slowly drops of rain start to tap the ground. \\\"What do you really want?\\\" the man asks.')\\r\\nalert('\\\"You say you want ' + want + '\\\" yet you are still sitting here, ' + doing + ' in the freezing rain.')\\r\\nalert(\\\"Oh well... you close your eyes and fall into a deep sleep.\\\")\";","export default \"function pickRandomWord(list) {\\r\\n    // returns a random number between 0 and 1 less than the length of the array (since arrays start at 0) \\r\\n    return list[Math.floor(Math.random() * list.length)]\\r\\n}\\r\\nconst words = ['tomato', 'banana', 'potato', 'broccoli', 'pickle', 'shoe', 'red', 'phone', 'pencil', 'ball', 'duck', 'dirty', 'shark', 'adventure', 'sandwich', 'game']\\r\\n\\r\\nalert(\\\"Try to remember all the words and enter them back in order one at a time\\\")\\r\\nlet wordList = []\\r\\nlet hasLost = false\\r\\nwhile (!hasLost) {\\r\\n    const word = pickRandomWord(words) // Add a new word\\r\\n    wordList.push(word) // This adds the new word to the end of our list\\r\\n    alert(\\\"Word Number \\\" + (wordList.length) + \\\": \\\" + word)\\r\\n    // Now we've shown next word, now we gotta ask what all the words are\\r\\n    // p stands for position, so we loop over the position of each word\\r\\n    for (var p = 0; p < wordList.length; p++) {\\r\\n        const word = wordList[p]\\r\\n        const guess = prompt(\\\"What is word number \\\" + (p + 1) + \\\"?\\\") // We add 1 to p since our array starts at 0\\r\\n        if (guess !== word) {\\r\\n            alert(\\\"You lose! The word was \\\" + word + \\\".\\\")\\r\\n            throw new Error(\\\"The game was lost\\\") // This forces our program to exit\\r\\n        }\\r\\n    }\\r\\n}\\r\\n\";"],"names":["Playground","name","content","target","className","href","games","Game","title","code","adLibs","description","author","memorizationGame","darkWalk","gamePropsFormat","_","String","thumbnail","ANY","optionalProps","props","sanitize","game","onClick","eval","play","icon","faPlayCircle","source","to","encodeURIComponent"],"sourceRoot":""}