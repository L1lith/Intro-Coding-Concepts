{"version":3,"file":"component---src-pages-vision-logic-models-explained-es-js-15c1ad86dcedc8742ce8.js","mappings":"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","sources":["webpack://your-first-rpg/./src/components/Dictionary/es/BooleanDef.js","webpack://your-first-rpg/./src/components/Dictionary/es/Output.js","webpack://your-first-rpg/./src/functions/isChildNull.js","webpack://your-first-rpg/./src/components/EasterEgg.js","webpack://your-first-rpg/./src/styles/EasterEgg.module.scss","webpack://your-first-rpg/./src/functions/mergeRefs.js","webpack://your-first-rpg/./src/functions/useClickToggle.js","webpack://your-first-rpg/./src/functions/useHover.js","webpack://your-first-rpg/./src/functions/useSmartToggle.js","webpack://your-first-rpg/./src/components/HoverDefinition.js","webpack://your-first-rpg/./src/styles/HoverDefinition.module.scss","webpack://your-first-rpg/./src/styles/YTVideo.module.scss","webpack://your-first-rpg/./src/components/YTVideo.js","webpack://your-first-rpg/./src/functions/hoverVideo.js","webpack://your-first-rpg/./src/components/Dictionary/es/Rules.js","webpack://your-first-rpg/./src/components/Dictionary/es/Stack.js","webpack://your-first-rpg/./src/pages/vision/logic-models-explained.es.js","webpack://your-first-rpg/./src/styles/vision/logic-models-explained.module.scss"],"sourcesContent":["import HoverDefinition from '../../HoverDefinition'\n\nconst BooleanDef = props => (\n  <HoverDefinition\n    definition={`Un \"boolean\" es algo que es verdadero o falso, como una pregunta de s√≠ o no.`}\n    {...props}>\n    {props.children || 'boolean'}\n  </HoverDefinition>\n)\n\nexport default BooleanDef\n","import HoverDefinition from '../../HoverDefinition'\n\nconst Output = props => (\n  <HoverDefinition definition={`Tu \"output\" es el resultado de tu modelo l√≥gico`} {...props}>\n    {props.children || 'output'}\n  </HoverDefinition>\n)\n\nexport default Output\n","function isChildNull(children) {\n  if (Array.isArray(children)) return children.some(child => !isChildNull(child))\n\n  return !!children?.type\n}\n\nexport default isChildNull\n","import isChildNull from '../functions/isChildNull'\nimport { easterEgg } from '../styles/EasterEgg.module.scss'\nimport { useState, Fragment } from 'react'\n\nfunction EasterEgg(props) {\n  if (isChildNull(props.children)) throw new Error('Children are required for easter :)')\n  const [isActive, setActive] = useState(false)\n  return (\n    <Fragment>\n      <span\n        className={easterEgg}\n        onClick={() => {\n          setActive(!isActive) // Toggleable\n        }}\n      >\n        {isActive === true ? 'üê£' : 'ü•ö'}\n      </span>\n      {isActive === true ? props.children : null}\n    </Fragment>\n  )\n}\n\nexport default EasterEgg\n","// extracted by mini-css-extract-plugin\nexport var easterEgg = \"EasterEgg-module--easterEgg--vN6A1\";\nexport var rainbow = \"EasterEgg-module--rainbow--npPc3\";","const mergeRefs = (...refs) => {\n  const filteredRefs = refs.filter(Boolean)\n  if (!filteredRefs.length) return null\n  if (filteredRefs.length === 0) return filteredRefs[0]\n  return inst => {\n    for (const ref of filteredRefs) {\n      if (typeof ref === 'function') {\n        ref(inst)\n      } else if (ref) {\n        ref.current = inst\n      }\n    }\n  }\n}\n\nexport default mergeRefs\n","import { useState, useEffect, useRef } from 'react'\n\n// Hook\nfunction useClickToggle() {\n  const [active, setActive] = useState(false)\n  const ref = useRef(null)\n  useEffect(() => {\n    const listener = event => {\n      // Do nothing if clicking ref's element or descendent elements\n      if (!ref.current || ref.current.contains(event.target)) {\n        setActive(true)\n      } else {\n        setActive(false)\n      }\n    }\n\n    document.addEventListener('mousedown', listener)\n    document.addEventListener('touchstart', listener)\n\n    return () => {\n      document.removeEventListener('mousedown', listener)\n      document.removeEventListener('touchstart', listener)\n    }\n  })\n  return [ref, active]\n}\n\nexport default useClickToggle\n","import { useState, useRef, useEffect } from 'react'\n\nfunction useHover() {\n  const [value, setValue] = useState(false)\n\n  const ref = useRef(null)\n\n  const handleMouseOver = () => setValue(true)\n  const handleMouseOut = () => setValue(false)\n\n  useEffect(\n    () => {\n      const node = ref.current\n      if (node) {\n        node.addEventListener('mouseover', handleMouseOver)\n        node.addEventListener('mouseout', handleMouseOut)\n\n        return () => {\n          node.removeEventListener('mouseover', handleMouseOver)\n          node.removeEventListener('mouseout', handleMouseOut)\n        }\n      }\n    },\n    [ref.current] // Recall only if ref changes\n  )\n\n  return [ref, value]\n}\n\nexport default useHover\n","import mergeRefs from './mergeRefs'\nimport useClickToggle from './useClickToggle'\nimport useHover from './useHover'\nimport { useRef, useEffect, useState } from 'react'\n\nfunction useSmartToggle() {\n  const myRef = useRef(null)\n  const [active, setActive] = useState(false)\n\n  const [hoverRef, isHovered] = useHover()\n  const [toggleRef, isToggled] = useClickToggle()\n\n  const shouldBeActive = isHovered || isToggled\n  if (shouldBeActive !== active) {\n    setActive(shouldBeActive)\n  }\n  return [mergeRefs(hoverRef, toggleRef), active]\n}\n\nexport default useSmartToggle\n","import useSmartToggle from '../functions/useSmartToggle'\nimport { definition, hoverDefinition, up } from '../styles/HoverDefinition.module.scss'\n\n// const validDirections = ['up', 'left', 'down', 'right']\n\n// const directionMap = {\n//   up,\n//   down,\n//   left,\n//   right\n// }\n\nfunction HoverDefinition(props) {\n  const [ref, isActive] = useSmartToggle()\n  if (typeof props.children != 'string') throw new Error('Expected a text child')\n  if (typeof props.definition != 'string') throw new Error('Expected a definition')\n  // const direction = props.hasOwnProperty('direction') ? props.direction : 'up'\n  // if (!validDirections.includes(direction)) throw new Error('Invalid Direction Specified')\n  return (\n    <span className={hoverDefinition} ref={ref}>\n      {isActive ? <span className={definition + ' ' + up}>{props.definition}</span> : null}\n      {props.children}\n    </span>\n  )\n}\n\nexport default HoverDefinition\n","// extracted by mini-css-extract-plugin\nexport var hoverDefinition = \"HoverDefinition-module--hover-definition--UaMyO\";\nexport var definition = \"HoverDefinition-module--definition--yVWLg\";\nexport var up = \"HoverDefinition-module--up--SLxoS\";\nexport var bottom = \"HoverDefinition-module--bottom---y5Y4\";\nexport var left = \"HoverDefinition-module--left--S+vWc\";\nexport var right = \"HoverDefinition-module--right--MhYaV\";","// extracted by mini-css-extract-plugin\nexport var youtubeContainer = \"YTVideo-module--youtubeContainer--zCB2A\";\nexport var disabled = \"YTVideo-module--disabled--HEa7g\";","import { youtubeContainer, disabled } from '../styles/YTVideo.module.scss'\nimport { useState, Fragment } from 'react'\n\nconst urlRegex = /^[0-9A-Za-z_-]{10}[048AEIMQUYcgkosw]$/i\n\nfunction YTVideo(props = { url }) {\n  const [isOpen, setOpen] = useState(false)\n  const { url, query = {} } = props\n  if (\n    props.hasOwnProperty('query') &&\n    (typeof query != 'object' || query === null || Object.keys(query).length < 1)\n  )\n    throw new Error('Please provide a valid query object')\n  if (typeof url !== 'string') {\n    console.warn(new Error('Expected a video url'))\n    return null\n  }\n  query.autoplay = 1 // Currently autoplay is broken, it is always applied when the video loads, but the video only loads after you click the image and at the moment there's no way to skip clicking the image so we just enforce autoplay for the hot-swapped youtube embed\n  if (!urlRegex.test(url)) throw new Error('This url is invalid')\n  const videoURL =\n    'https://www.youtube.com/embed/' +\n    url +\n    `?` +\n    Object.entries(query)\n      .map(([key, value]) => `${key}=${encodeURIComponent(value)}`)\n      .join('&')\n  const parentProps = { ...props }\n  delete parentProps.url\n  delete parentProps.children\n  return (\n    <div\n      {...parentProps}\n      className={\n        youtubeContainer + ' youtube-container'\n        // 'youtube-container' + (typeof props.className == 'string' ? ' ' + props.className : '')\n      }\n    >\n      {!isOpen ? (\n        <Fragment>\n          <img\n            onClick={() => setOpen(true)}\n            src={\n              props.hasOwnProperty('thumbnail')\n                ? props.thumbnail\n                : `https://img.youtube.com/vi/${url}/hqdefault.jpg`\n            }\n            alt=\"Youtube Video\"\n          />\n          <span>‚ñ∂</span>\n        </Fragment>\n      ) : null}\n      <iframe\n        className={isOpen ? null : disabled}\n        src={isOpen ? videoURL : null}\n        title=\"YouTube video player\"\n        frameBorder=\"0\"\n        sandbox=\"allow-scripts allow-same-origin\"\n        allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\n        allowFullScreen\n      />\n    </div>\n  )\n}\n\nexport default YTVideo\n","function hoverVideo() {\n  let mouseOver = false\n  const output = {}\n  output.onMouseOver = event => {\n    mouseOver = true\n    event.target.play()\n  }\n  output.onMouseOut = () => {\n    mouseOver = false\n  }\n  output.onEnded = event => {\n    if (mouseOver === true) event.target.play()\n  }\n  return output\n}\n\nexport default hoverVideo\n","import HoverDefinition from '../../HoverDefinition'\n\nconst Rules = props => (\n  <HoverDefinition\n    definition={\n      'Esta es la \"l√≥gica\" o el \"c√≥digo\" de su modelo l√≥gico. Las \"rules\" se utilizan para decidir cu√°l es la salida de nuestro modelo en funci√≥n de la entrada'\n    }\n    {...props}>\n    {props.children || 'rules'}\n  </HoverDefinition>\n)\n\nexport default Rules\n","import HoverDefinition from '../../HoverDefinition'\n\nconst Stack = props => (\n  <HoverDefinition\n    definition={`Su \"stack\" (como un pila) es la lista de software / aplicaciones que usa para codificar`}\n    {...props}>\n    {props.children || 'stack'}\n  </HoverDefinition>\n)\n\nexport default Stack\n","import BooleanDef from '../../components/Dictionary/es/BooleanDef'\nimport Output from '../../components/Dictionary/es/Output'\nimport Rules from '../../components/Dictionary/es/Rules'\nimport Stack from '../../components/Dictionary/es/Stack'\nimport EasterEgg from '../../components/EasterEgg'\nimport Link from '../../components/TranslatedLink'\nimport YTVideo from '../../components/YTVideo'\nimport hoverVideo from '../../functions/hoverVideo'\nimport {\n  logicModelChart,\n  trafficStop\n} from '../../styles/vision/logic-models-explained.module.scss'\nimport { Helmet } from 'react-helmet'\n\nexport default function LogicModelsExplained() {\n  return (\n    <div className=\"logic-models\">\n      <Helmet>\n        <meta name=\"description\" content=\"Arranging Logic Models\" />\n        <title>üß† Explicaci√≥n de modelos l√≥gicos</title>\n      </Helmet>\n      <h2>#1.1 üß† Explicaci√≥n de modelos l√≥gicos</h2>\n      <br />\n      <span className=\"introCard\">\n        <video autoPlay {...hoverVideo()} muted>\n          <source src=\"/video/redstoneContraption.webm\" type=\"video/webm\" />\n        </video>\n        Minecraft es un gran lugar para comenzar tu aventura &#58;&#41;\n      </span>\n      <p>\n        A continuaci√≥n, aprender√° sobre la l√≥gica <BooleanDef>boolean</BooleanDef> y c√≥mo\n        visualizarlos. Visualizante Los sistemas l√≥gicos son muy √∫tiles. El mundo entero opera\n        usando la l√≥gica; como como haces tu trabajo, c√≥mo cruzas la calle o c√≥mo navegas por un\n        sitio web. Tomamos muchas decisiones sin darnos cuenta de que los hicimos.\n      </p>\n      {\n        null /*<span className=\"introCard\">\n      <img src=\"/images/spaghettiBowl.jpeg\" alt=\"SLC Spaghetti Bowl\" />\n      Nothing gets the blood pumping quite like being tail-gated around a 90¬∞ turn on the freeway.\n      <span className=\"smallerText\">\n        {' '}\n        Credit to <a target=\"_blank\" href=\"https://www.utahseagull.com/2019/10/\">Utah Seagull</a>\n      </span>\n    </span> */\n      }\n      <p>\n        Todos los modelos l√≥gicos tienen 3 componentes b√°sicos\n        <ol className={logicModelChart}>\n          <li>\n            <span className=\"bold\">Datos de Entrada: </span>Una fuente de datos entrante a su modelo\n            l√≥gico que puede utilizar para tomar decisiones.\n          </li>\n          <li>\n            <span className=\"bold\">Reglas:</span> Esta es la \"l√≥gica\" o el \"c√≥digo\" de su modelo.\n            Las reglas se utilizan para decidir cu√°l es el resultado (o salida) de nuestro modelo en\n            funci√≥n de la entrada.\n          </li>\n          <li>\n            <span className=\"bold\">Datos Resultantes: </span>Cu√°l es el resultado de su modelo\n            l√≥gico.\n          </li>\n        </ol>\n        <br />\n        <br />\n        Imag√≠nese que es un ingeniero civil que intenta optimizar el flujo de tr√°fico en una zona\n        muy transitada. Nuestros datos de entrada son el flujo de autom√≥viles hacia la autopista y\n        sus destinos previstos. Nuestro <Output>resultado</Output> es el flujo de autom√≥viles que\n        salen de la autopista. Como ingeniero civil, nuestro modelo l√≥gico no solo marcar√° la\n        diferencia cuando alguien intente ponerse a trabajar r√°pidamente, sino que nuestra decisi√≥n\n        finalmente marcar√° la diferencia entre la vida y la muerte cuando se produzca una conducci√≥n\n        imprudente.\n        <br />\n        <br />\n        Mientras mira este video, intente darse cuenta de todos los factores a los que los\n        ingenieros civiles deben prestar atenci√≥n al dise√±ar carreteras.\n      </p>\n      <YTVideo url=\"DOc0glzYYhw\" thumbnail=\"/images/como-se-hacen-las-carreteras.jpg\" />\n      <p>\n        \"Eso es genial... pero ¬øc√≥mo se aplica esto a la codificaci√≥n?\" ¬°Me alegra que hayas\n        preguntado! Cuando estamos codificando nosotros tambi√©n estamos escribiendo un sistema\n        l√≥gico para manejar el flujo de entrada de informaci√≥n (como el mouse y entrada de teclado\n        al navegar por una p√°gina web) y el flujo de informaci√≥n de salida\n        <Output>salida</Output> (como mostrar una p√°gina web o renderizar un videojuego). Como\n        codificador, escribe (o \"codifica\") el <Rules>reglas</Rules> l√≥gicas del sistema (como\n        cuando el usuario hace clic en este enlace, lo lleva a esa p√°gina). Si bien decir que\n        inventar una computadora o una carretera desde cero puede ser incre√≠blemente complejo,\n        ingenieros inform√°ticos, civiles y de todo tipo aprovechan la tecnolog√≠a y metodolog√≠a que\n        ha estado en desarrollo durante mucho m√°s tiempo del que llevamos vivos.\n      </p>\n      Aqu√≠ hay una tabla que describe el modelo l√≥gico que usamos cuando estamos en un sem√°foro. Tu\n      cerebro proporciona las <Rules>reglas</Rules> de toma de decisiones del modelo l√≥gico.\n      <table className={trafficStop}>\n        <thead>\n          <th>Entrada (√°rea geogr√°fica)</th>\n          <th>Salida (tipo de camino)</th>\n        </thead>\n        <tr>\n          <td>Un campo relativamente plano</td>\n          <td>Un campo plano de carretera largo, recto y de r√°pido movimiento</td>\n        </tr>\n        <tr>\n          <td>Una ladera empinada</td>\n          <td>Una carretera sinuosa y lenta con muchas se√±ales</td>\n        </tr>\n        <tr>\n          <td>Una ciudad llena de gente</td>\n          <td>Una autopista muy ancha con muchas entradas y salidas</td>\n        </tr>\n      </table>\n      <p>\n        En codificaci√≥n tenemos un conjunto de software y metodolog√≠a que hace que describir nuestro\n        sistema l√≥gico m√°s f√°cil. En el mundo del desarrollo de sitios web, a esto lo llamamos{' '}\n        <Stack>pila</Stack>. Muy parecido a un El ingeniero civil debe considerar la eficacia de un\n        sistema de carreteras, al construir un sitio web, debe considerar muchos aspectos del\n        sistema, como la seguridad cibern√©tica (permitir datos de entrada inseguros ha dio lugar a\n        muchas identidades y tarjetas de cr√©dito robadas), la experiencia del usuario y el atractivo\n        visual. Por Entendiendo mejor las <Rules>reglas</Rules> l√≥gicas detr√°s de nuestro software,\n        entendemos mejor d√≥nde est√° surgen problemas, evitando fugas catastr√≥ficas de la base de\n        datos y la rabia del usuario abandona antes de que ocurrir.\n        <br />\n        <br />\n      </p>\n      <YTVideo\n        url=\"qybUFnY7Y8w\"\n        query={{ cc_load_policy: '0' }}\n        thumbnail=\"/images/this-too-shall-pass.jpg\"\n      />\n      <span className=\"italic\">¬°Funciona perfectamente el 60% del tiempo!</span>\n      <p>\n        Al dise√±ar sistemas de software, es importante pensarlo de principio a fin. La mayor√≠a de\n        los errores de software provienen de programadores que piensan \"no es mi trabajo\" o que no\n        hacen un esfuerzo adicional para considerar los casos extremos porque \"funcion√≥ cuando lo\n        ejecut√©\". Debe recordar los 3 componentes de su modelo l√≥gico, as√≠ que primero considere la{' '}\n        <span className=\"bold\">entrada</span> de su usuario. Al navegar por un sitio, el usuario da\n        muchas entradas, como hacer clic en un enlace, desplazarse por la p√°gina, iniciar sesi√≥n o\n        enviar un formulario.\n        <br />\n        <br />A continuaci√≥n, debe pensar en cada paso de su c√≥digo y en c√≥mo estas{' '}\n        <Rules>reglas</Rules> manejan en √∫ltima instancia las entradas de sus usuarios y las\n        traducen en la <Output>salida</Output> del programa. No tome atajos ni deje problemas para\n        que alguien m√°s se ocupe de ellos. Construir el mejor software que puedas la primera vez\n        (definitivamente escribir√°s un c√≥digo desordenado al comenzar, pero despu√©s de hacer tu\n        primer borrador de algo, intenta regresar y buscar formas de mejorarlo) te ahorrar√° mucho\n        tiempo m√°s adelante. sobre. ¬°Comprenda el funcionamiento interno profundo de su{' '}\n        <Stack>pila</Stack>{' '}\n        <span className=\"underline\">jugando con ella y haciendo preguntas!</span>\n        <br />\n        <br />\n        El <Output /> es lo que experimentan los usuarios de su software (este es un aspecto{' '}\n        <span className=\"underline\">cr√≠tico</span> de su modelo l√≥gico), por lo que al codificar\n        siempre debe pensar en lo que sus usuarios est√°n tratando de lograr, y no solo en todos los\n        posibles problemas y errores que podr√≠an ejecutar. en, pero tambi√©n c√≥mo hacer que su\n        software sea sencillo y conveniente. Al igual que un buen dise√±o de carreteras, su software\n        debe servir de manera efectiva a sus usuarios, en lugar de obligar a sus usuarios a\n        concentrarse en juguetear tediosamente con un software mal dise√±ado. Asuma la\n        responsabilidad como ingeniero de fallas evitables y otros problemas de dise√±o que surjan\n        con su software.\n      </p>\n      <Link className=\"next\" to=\"/toying\">\n        Siguiente: #2.0 üß© Jugando con rompecabezas l√≥gicos\n      </Link>\n      <br />\n      <br />\n      <EasterEgg>\n        <p>Bono: ¬øTe gust√≥ la m√°quina de Rube Goldberg?</p>\n        <YTVideo url=\"Av07QiqmsoA\" thumbnail=\"/images/lifes-lemons.jpg\" />\n      </EasterEgg>\n    </div>\n  )\n}\n","// extracted by mini-css-extract-plugin\nexport var trafficStop = \"logic-models-explained-module--trafficStop--oj9e-\";\nexport var logicModelChart = \"logic-models-explained-module--logicModelChart--mYYlH\";"],"names":["props","definition","children","isChildNull","Array","isArray","some","child","type","Error","useState","isActive","setActive","Fragment","className","onClick","refs","filteredRefs","filter","Boolean","length","inst","ref","current","active","useRef","useEffect","listener","event","contains","target","document","addEventListener","removeEventListener","value","setValue","handleMouseOver","handleMouseOut","node","useHover","hoverRef","isHovered","useClickToggle","toggleRef","isToggled","shouldBeActive","mergeRefs","useSmartToggle","urlRegex","url","isOpen","setOpen","query","hasOwnProperty","Object","keys","console","warn","autoplay","test","videoURL","entries","map","key","encodeURIComponent","join","parentProps","youtubeContainer","src","thumbnail","alt","title","frameBorder","sandbox","allow","allowFullScreen","mouseOver","output","play","HoverDefinition","LogicModelsExplained","Helmet","name","content","autoPlay","hoverVideo","muted","BooleanDef","logicModelChart","Output","YTVideo","trafficStop","cc_load_policy","to","EasterEgg"],"sourceRoot":""}