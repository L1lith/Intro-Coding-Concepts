{"version":3,"file":"component---src-pages-coding-index-en-js-b5d9840660ff6f94fe37.js","mappings":"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","sources":["webpack://your-first-rpg/./src/components/Dictionary/en/Expression.js","webpack://your-first-rpg/./src/components/Dictionary/en/Interpreter.js","webpack://your-first-rpg/./src/functions/mergeRefs.js","webpack://your-first-rpg/./src/functions/useClickToggle.js","webpack://your-first-rpg/./src/functions/useHover.js","webpack://your-first-rpg/./src/functions/useSmartToggle.js","webpack://your-first-rpg/./src/components/HoverDefinition.js","webpack://your-first-rpg/./src/styles/HoverDefinition.module.scss","webpack://your-first-rpg/./src/styles/YTVideo.module.scss","webpack://your-first-rpg/./src/components/YTVideo.js","webpack://your-first-rpg/./src/components/Dictionary/en/AhaMoment.js","webpack://your-first-rpg/./src/pages/coding/index.en.js"],"sourcesContent":["import HoverDefinition from '../../HoverDefinition'\n\nconst Expression = props => (\n  <HoverDefinition\n    definition=\"An expression is a piece of code that can be reduced to a single value, like a math equation\"\n    {...props}\n  >\n    {props.children || 'expression'}\n  </HoverDefinition>\n)\n\nexport default Expression\n","import HoverDefinition from '../../HoverDefinition'\n\nconst Interpreter = props => (\n  <HoverDefinition\n    definition=\"The JavaScript interpreter is the software that runs your code, like the engine\"\n    {...props}\n  >\n    {props.children || 'interpreter'}\n  </HoverDefinition>\n)\n\nexport default Interpreter\n","const mergeRefs = (...refs) => {\n  const filteredRefs = refs.filter(Boolean)\n  if (!filteredRefs.length) return null\n  if (filteredRefs.length === 0) return filteredRefs[0]\n  return inst => {\n    for (const ref of filteredRefs) {\n      if (typeof ref === 'function') {\n        ref(inst)\n      } else if (ref) {\n        ref.current = inst\n      }\n    }\n  }\n}\n\nexport default mergeRefs\n","import { useState, useEffect, useRef } from 'react'\n\n// Hook\nfunction useClickToggle() {\n  const [active, setActive] = useState(false)\n  const ref = useRef(null)\n  useEffect(() => {\n    const listener = event => {\n      // Do nothing if clicking ref's element or descendent elements\n      if (!ref.current || ref.current.contains(event.target)) {\n        setActive(true)\n      } else {\n        setActive(false)\n      }\n    }\n\n    document.addEventListener('mousedown', listener)\n    document.addEventListener('touchstart', listener)\n\n    return () => {\n      document.removeEventListener('mousedown', listener)\n      document.removeEventListener('touchstart', listener)\n    }\n  })\n  return [ref, active]\n}\n\nexport default useClickToggle\n","import { useState, useRef, useEffect } from 'react'\n\nfunction useHover() {\n  const [value, setValue] = useState(false)\n\n  const ref = useRef(null)\n\n  const handleMouseOver = () => setValue(true)\n  const handleMouseOut = () => setValue(false)\n\n  useEffect(\n    () => {\n      const node = ref.current\n      if (node) {\n        node.addEventListener('mouseover', handleMouseOver)\n        node.addEventListener('mouseout', handleMouseOut)\n\n        return () => {\n          node.removeEventListener('mouseover', handleMouseOver)\n          node.removeEventListener('mouseout', handleMouseOut)\n        }\n      }\n    },\n    [ref.current] // Recall only if ref changes\n  )\n\n  return [ref, value]\n}\n\nexport default useHover\n","import mergeRefs from './mergeRefs'\nimport useClickToggle from './useClickToggle'\nimport useHover from './useHover'\nimport { useRef, useEffect, useState } from 'react'\n\nfunction useSmartToggle() {\n  const myRef = useRef(null)\n  const [active, setActive] = useState(false)\n\n  const [hoverRef, isHovered] = useHover()\n  const [toggleRef, isToggled] = useClickToggle()\n\n  const shouldBeActive = isHovered || isToggled\n  if (shouldBeActive !== active) {\n    setActive(shouldBeActive)\n  }\n  return [mergeRefs(hoverRef, toggleRef), active]\n}\n\nexport default useSmartToggle\n","import useSmartToggle from '../functions/useSmartToggle'\nimport { definition, hoverDefinition, up } from '../styles/HoverDefinition.module.scss'\n\n// const validDirections = ['up', 'left', 'down', 'right']\n\n// const directionMap = {\n//   up,\n//   down,\n//   left,\n//   right\n// }\n\nfunction HoverDefinition(props) {\n  const [ref, isActive] = useSmartToggle()\n  if (typeof props.children != 'string') throw new Error('Expected a text child')\n  if (typeof props.definition != 'string') throw new Error('Expected a definition')\n  // const direction = props.hasOwnProperty('direction') ? props.direction : 'up'\n  // if (!validDirections.includes(direction)) throw new Error('Invalid Direction Specified')\n  return (\n    <span className={hoverDefinition} ref={ref}>\n      {isActive ? <span className={definition + ' ' + up}>{props.definition}</span> : null}\n      {props.children}\n    </span>\n  )\n}\n\nexport default HoverDefinition\n","// extracted by mini-css-extract-plugin\nexport var hoverDefinition = \"HoverDefinition-module--hover-definition--UaMyO\";\nexport var definition = \"HoverDefinition-module--definition--yVWLg\";\nexport var up = \"HoverDefinition-module--up--SLxoS\";\nexport var bottom = \"HoverDefinition-module--bottom---y5Y4\";\nexport var left = \"HoverDefinition-module--left--S+vWc\";\nexport var right = \"HoverDefinition-module--right--MhYaV\";","// extracted by mini-css-extract-plugin\nexport var youtubeContainer = \"YTVideo-module--youtubeContainer--zCB2A\";\nexport var disabled = \"YTVideo-module--disabled--HEa7g\";","import { youtubeContainer, disabled } from '../styles/YTVideo.module.scss'\nimport { useState, Fragment } from 'react'\n\nconst urlRegex = /^[0-9A-Za-z_-]{10}[048AEIMQUYcgkosw]$/i\n\nfunction YTVideo(props = { url }) {\n  const [isOpen, setOpen] = useState(false)\n  const { url, query = {} } = props\n  if (\n    props.hasOwnProperty('query') &&\n    (typeof query != 'object' || query === null || Object.keys(query).length < 1)\n  )\n    throw new Error('Please provide a valid query object')\n  if (typeof url !== 'string') {\n    console.warn(new Error('Expected a video url'))\n    return null\n  }\n  query.autoplay = 1 // Currently autoplay is broken, it is always applied when the video loads, but the video only loads after you click the image and at the moment there's no way to skip clicking the image so we just enforce autoplay for the hot-swapped youtube embed\n  if (!urlRegex.test(url)) throw new Error('This url is invalid')\n  const videoURL =\n    'https://www.youtube.com/embed/' +\n    url +\n    `?` +\n    Object.entries(query)\n      .map(([key, value]) => `${key}=${encodeURIComponent(value)}`)\n      .join('&')\n  const parentProps = { ...props }\n  delete parentProps.url\n  delete parentProps.children\n  return (\n    <div\n      {...parentProps}\n      className={\n        youtubeContainer + ' youtube-container'\n        // 'youtube-container' + (typeof props.className == 'string' ? ' ' + props.className : '')\n      }\n    >\n      {!isOpen ? (\n        <Fragment>\n          <img\n            onClick={() => setOpen(true)}\n            src={\n              props.hasOwnProperty('thumbnail')\n                ? props.thumbnail\n                : `https://img.youtube.com/vi/${url}/hqdefault.jpg`\n            }\n            alt=\"Youtube Video\"\n          />\n          <span>▶</span>\n        </Fragment>\n      ) : null}\n      <iframe\n        className={isOpen ? null : disabled}\n        src={isOpen ? videoURL : null}\n        title=\"YouTube video player\"\n        frameBorder=\"0\"\n        sandbox=\"allow-scripts allow-same-origin\"\n        allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\n        allowFullScreen\n      />\n    </div>\n  )\n}\n\nexport default YTVideo\n","import HoverDefinition from '../../HoverDefinition'\r\n\r\nconst BooleanDef = props => (\r\n  <HoverDefinition\r\n    definition=\"An aha moment is the satisfying feeling when you finally understand something\"\r\n    {...props}>\r\n    {props.children || 'aha moment'}\r\n  </HoverDefinition>\r\n)\r\n\r\nexport default BooleanDef\r\n","import AhaMoment from '../../components/Dictionary/en/AhaMoment'\nimport Expression from '../../components/Dictionary/en/Expression'\nimport Interpreter from '../../components/Dictionary/en/Interpreter'\nimport Link from '../../components/TranslatedLink'\nimport YTVideo from '../../components/YTVideo'\nimport { Helmet } from 'react-helmet'\n\nexport default function CodingIntro() {\n  return (\n    <div className=\"coding-intro\">\n      <h1 className=\"title\">Chapter 3</h1>\n      <Helmet>\n        <title>🛣️ Stepping into Coding</title>\n        <meta name=\"description\" content=\"An introduction to coding in JavaScript\" />\n      </Helmet>\n      <ol className=\"toc pages\">\n        <li>\n          <Link to=\"/coding#lesson\">#3.0 🛣️ Stepping into Coding</Link>\n        </li>\n        <li>\n          <Link to=\"/coding/primitives\">#3.1 📊 Basic Data Types</Link>\n        </li>\n        <li>\n          <Link to=\"/coding/essential-tools\">#3.2 🔨 Essential Tools</Link>\n        </li>\n      </ol>\n      <h2 id=\"lesson\">#3.0 🛣️ Stepping into Coding</h2>\n      <br />\n      <span className=\"introCard\">\n        <YTVideo url=\"MAlSjtxy5ak\" thumbnail=\"/images/coding-tutorial-meme.jpg\" />\n        (this video is a joke)\n      </span>\n\n      <p>\n        How is JS (JavaScript) code written? JavaScript code is just a series of{' '}\n        <Expression>code expressions</Expression> (like putting together a bunch of little logic\n        models like legos) that are run by the <Interpreter>JavaScript Interpreter</Interpreter> in\n        a particular order. Each line of code is evaluated one at a time from top to bottom and\n        left-to-right like English. The <Interpreter /> also understands and applies the rules of{' '}\n        <a target=\"_blank\" href=\"https://www.mathsisfun.com/operation-order-pemdas.html\">\n          PEMDAS\n        </a>\n        . Your goal should be to write code that is easy to understand, this will help you make\n        awesome programs.\n        <br />\n        <br />\n        In this section you will learn how to use logic to write your first code, hurray! Take it at\n        your own pace so you don't get overwhelmed, and I promise coding can be fun! I'm going to be\n        providing many examples, and if you get confused it's okay to continue on and come back\n        later. Playing around with code is one of the best ways to have a wonderful{' '}\n        <AhaMoment>\"aha moment\"</AhaMoment>.\n      </p>\n      <Link className=\"next\" to=\"/coding/primitives\">\n        Next: #3.1 📊 Basic Data Types\n      </Link>\n    </div>\n  )\n}\n"],"names":["props","definition","children","refs","filteredRefs","filter","Boolean","length","inst","ref","current","useState","active","setActive","useRef","useEffect","listener","event","contains","target","document","addEventListener","removeEventListener","value","setValue","handleMouseOver","handleMouseOut","node","useHover","hoverRef","isHovered","useClickToggle","toggleRef","isToggled","shouldBeActive","mergeRefs","useSmartToggle","isActive","Error","className","urlRegex","url","isOpen","setOpen","query","hasOwnProperty","Object","keys","console","warn","autoplay","test","videoURL","entries","map","key","encodeURIComponent","join","parentProps","youtubeContainer","Fragment","onClick","src","thumbnail","alt","title","frameBorder","sandbox","allow","allowFullScreen","HoverDefinition","CodingIntro","Helmet","name","content","to","id","YTVideo","Expression","Interpreter","href","AhaMoment"],"sourceRoot":""}