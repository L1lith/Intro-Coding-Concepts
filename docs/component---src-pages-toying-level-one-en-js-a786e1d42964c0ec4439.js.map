{"version":3,"file":"component---src-pages-toying-level-one-en-js-a786e1d42964c0ec4439.js","mappings":"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","sources":["webpack://your-first-rpg/./src/components/BooleanGame/levels/LevelOne.js","webpack://your-first-rpg/./src/components/Dictionary/en/BooleanDef.js","webpack://your-first-rpg/./src/components/Dictionary/en/Expression.js","webpack://your-first-rpg/./src/components/Dictionary/en/Operator.js","webpack://your-first-rpg/./src/functions/mergeRefs.js","webpack://your-first-rpg/./src/functions/useClickToggle.js","webpack://your-first-rpg/./src/functions/useHover.js","webpack://your-first-rpg/./src/functions/useSmartToggle.js","webpack://your-first-rpg/./src/components/HoverDefinition.js","webpack://your-first-rpg/./src/styles/HoverDefinition.module.scss","webpack://your-first-rpg/./src/styles/BooleanOps.module.scss","webpack://your-first-rpg/./src/components/booleanOps.js","webpack://your-first-rpg/./src/pages/toying/level-one.en.js"],"sourcesContent":["import BooleanGame from '..'\n\nexport default () => (\n  <BooleanGame\n    title={'Level 1'}\n    size={3}\n    rulesOptions={{ allowNots: false, minColors: 2, minShapes: 2 }}\n  />\n)\n","import HoverDefinition from '../../HoverDefinition'\n\nconst BooleanDef = props => (\n  <HoverDefinition\n    definition=\"A boolean is something that is either true or false, like a yes or no question\"\n    {...props}\n  >\n    {props.children || 'boolean'}\n  </HoverDefinition>\n)\n\nexport default BooleanDef\n","import HoverDefinition from '../../HoverDefinition'\n\nconst Expression = props => (\n  <HoverDefinition\n    definition=\"An expression is a piece of code that can be reduced to a single value, like a math equation\"\n    {...props}\n  >\n    {props.children || 'expression'}\n  </HoverDefinition>\n)\n\nexport default Expression\n","import HoverDefinition from '../../HoverDefinition'\n\nconst Operator = props => (\n  <HoverDefinition\n    definition=\"A coding operator is a tool in the language that inputs and outputs data\"\n    {...props}\n  >\n    {props.children || 'operator'}\n  </HoverDefinition>\n)\n\nexport default Operator\n","const mergeRefs = (...refs) => {\n  const filteredRefs = refs.filter(Boolean)\n  if (!filteredRefs.length) return null\n  if (filteredRefs.length === 0) return filteredRefs[0]\n  return inst => {\n    for (const ref of filteredRefs) {\n      if (typeof ref === 'function') {\n        ref(inst)\n      } else if (ref) {\n        ref.current = inst\n      }\n    }\n  }\n}\n\nexport default mergeRefs\n","import { useState, useEffect, useRef } from 'react'\n\n// Hook\nfunction useClickToggle() {\n  const [active, setActive] = useState(false)\n  const ref = useRef(null)\n  useEffect(() => {\n    const listener = event => {\n      // Do nothing if clicking ref's element or descendent elements\n      if (!ref.current || ref.current.contains(event.target)) {\n        setActive(true)\n      } else {\n        setActive(false)\n      }\n    }\n\n    document.addEventListener('mousedown', listener)\n    document.addEventListener('touchstart', listener)\n\n    return () => {\n      document.removeEventListener('mousedown', listener)\n      document.removeEventListener('touchstart', listener)\n    }\n  })\n  return [ref, active]\n}\n\nexport default useClickToggle\n","import { useState, useRef, useEffect } from 'react'\n\nfunction useHover() {\n  const [value, setValue] = useState(false)\n\n  const ref = useRef(null)\n\n  const handleMouseOver = () => setValue(true)\n  const handleMouseOut = () => setValue(false)\n\n  useEffect(\n    () => {\n      const node = ref.current\n      if (node) {\n        node.addEventListener('mouseover', handleMouseOver)\n        node.addEventListener('mouseout', handleMouseOut)\n\n        return () => {\n          node.removeEventListener('mouseover', handleMouseOver)\n          node.removeEventListener('mouseout', handleMouseOut)\n        }\n      }\n    },\n    [ref.current] // Recall only if ref changes\n  )\n\n  return [ref, value]\n}\n\nexport default useHover\n","import mergeRefs from './mergeRefs'\nimport useClickToggle from './useClickToggle'\nimport useHover from './useHover'\nimport { useRef, useEffect, useState } from 'react'\n\nfunction useSmartToggle() {\n  const myRef = useRef(null)\n  const [active, setActive] = useState(false)\n\n  const [hoverRef, isHovered] = useHover()\n  const [toggleRef, isToggled] = useClickToggle()\n\n  const shouldBeActive = isHovered || isToggled\n  if (shouldBeActive !== active) {\n    setActive(shouldBeActive)\n  }\n  return [mergeRefs(hoverRef, toggleRef), active]\n}\n\nexport default useSmartToggle\n","import useSmartToggle from '../functions/useSmartToggle'\nimport { definition, hoverDefinition, up } from '../styles/HoverDefinition.module.scss'\n\n// const validDirections = ['up', 'left', 'down', 'right']\n\n// const directionMap = {\n//   up,\n//   down,\n//   left,\n//   right\n// }\n\nfunction HoverDefinition(props) {\n  const [ref, isActive] = useSmartToggle()\n  if (typeof props.children != 'string') throw new Error('Expected a text child')\n  if (typeof props.definition != 'string') throw new Error('Expected a definition')\n  // const direction = props.hasOwnProperty('direction') ? props.direction : 'up'\n  // if (!validDirections.includes(direction)) throw new Error('Invalid Direction Specified')\n  return (\n    <span className={hoverDefinition} ref={ref}>\n      {isActive ? <span className={definition + ' ' + up}>{props.definition}</span> : null}\n      {props.children}\n    </span>\n  )\n}\n\nexport default HoverDefinition\n","// extracted by mini-css-extract-plugin\nexport var hoverDefinition = \"HoverDefinition-module--hover-definition--UaMyO\";\nexport var definition = \"HoverDefinition-module--definition--yVWLg\";\nexport var up = \"HoverDefinition-module--up--SLxoS\";\nexport var bottom = \"HoverDefinition-module--bottom---y5Y4\";\nexport var left = \"HoverDefinition-module--left--S+vWc\";\nexport var right = \"HoverDefinition-module--right--MhYaV\";","// extracted by mini-css-extract-plugin\nexport var booleanOps = \"BooleanOps-module--booleanOps--rBBIq\";\nexport var tableMember = \"BooleanOps-module--table-member--pKRu2\";","import { booleanOps } from '../styles/BooleanOps.module.scss'\n\nexport default () => (\n  <table className={booleanOps}>\n    <thead>\n      <tr>\n        <th className=\"table-member\"></th>\n        <th className=\"table-member\">A</th>\n        <th className=\"table-member\">B</th>\n        <th className=\"table-member\">A &amp; B (AND)</th>\n        <th className=\"table-member\">A || B (OR)</th>\n        <th className=\"table-member\">NOT A</th>\n        <th className=\"table-member\">NOT B</th>\n      </tr>\n    </thead>\n    <tbody>\n      <tr>\n        <td className=\"table-member\">#1</td>\n        <td className=\"table-member\">true</td>\n        <td className=\"table-member\">true</td>\n        <td className=\"table-member\">true</td>\n        <td className=\"table-member\">true</td>\n        <td className=\"table-member\">false</td>\n        <td className=\"table-member\">false</td>\n      </tr>\n      <tr>\n        <td className=\"table-member\">#2</td>\n        <td className=\"table-member\">false</td>\n        <td className=\"table-member\">false</td>\n        <td className=\"table-member\">false</td>\n        <td className=\"table-member\">false</td>\n        <td className=\"table-member\">true</td>\n        <td className=\"table-member\">true</td>\n      </tr>\n      <tr>\n        <td className=\"table-member\">#3</td>\n        <td className=\"table-member\">true</td>\n        <td className=\"table-member\">false</td>\n        <td className=\"table-member\">false</td>\n        <td className=\"table-member\">true</td>\n        <td className=\"table-member\">false</td>\n        <td className=\"table-member\">true</td>\n      </tr>\n      <tr>\n        <td className=\"table-member\">#4</td>\n        <td className=\"table-member\">false</td>\n        <td className=\"table-member\">true</td>\n        <td className=\"table-member\">false</td>\n        <td className=\"table-member\">true</td>\n        <td className=\"table-member\">true</td>\n        <td className=\"table-member\">false</td>\n      </tr>\n    </tbody>\n  </table>\n)\n","import LevelOneGame from '../../components/BooleanGame/levels/LevelOne'\nimport BooleanDef from '../../components/Dictionary/en/BooleanDef'\nimport Expression from '../../components/Dictionary/en/Expression'\nimport Operator from '../../components/Dictionary/en/Operator'\nimport Link from '../../components/TranslatedLink'\nimport BooleanOps from '../../components/booleanOps'\nimport { Helmet } from 'react-helmet'\n\nexport default function LevelOne() {\n  return (\n    <div className=\"level-1\">\n      <Helmet>\n        <title>💬 Basic Or Expressions</title>\n        <meta name=\"description\" content=\"Learn about Or expressions with a simple game!\" />\n      </Helmet>\n      <h2>#2.1 💬 Basic Or Expressions</h2>\n      <br />\n      <span className=\"introCard\">\n        <BooleanOps />\n        Here you can see a chart of the basic boolean <Operator>operations</Operator> (&amp; means\n        AND, || means OR)\n      </span>\n      <p>\n        In this section we will be playing the Matching Rules game in order to learn about{' '}\n        <BooleanDef /> logic. <BooleanDef>Boolean</BooleanDef> logic is the fundamental language\n        that both electronic circuitry, and computers themselves are made out of, and it happens to\n        be a great tool for learning how we talk to computers.\n        <br />\n        <br />\n        <BooleanDef>Boolean</BooleanDef> logic contains a set of{' '}\n        <Expression>expressions</Expression> (kind of like coding language) that allow us to perform\n        basic <Operator>operations</Operator> on data. True or false statements (boolean values like\n        yes or no) are the main type of <Expression>expressions</Expression> handled with{' '}\n        <BooleanDef /> logic. This means we can ask the computer yes or no questions using code to\n        tell it what to do.\n      </p>\n      <br />\n      <h2>The \"Or\" Operator</h2>\n      <p>\n        Or is a logical <Operator /> that will only output true if at least one of it's inputs are\n        true. In the first level of the Matching Game we will experiment with the Or <Operator />.\n        Choose only the tiles whose colors and shapes are allowed to win.\n      </p>\n      <LevelOneGame />\n      <p>\n        Once you've played the first level of the Matching Game a few times and are confident you\n        understand OR continue on to the next section to learn about NOT{' '}\n        <Expression>expressions</Expression> 😊\n      </p>\n      <Link className=\"next\" to=\"/toying/level-two\">\n        Next: #2.2 🚫 Whats \"Not\" Allowed\n      </Link>\n    </div>\n  )\n}\n"],"names":["title","size","rulesOptions","allowNots","minColors","minShapes","props","definition","children","refs","filteredRefs","filter","Boolean","length","inst","ref","current","useState","active","setActive","useRef","useEffect","listener","event","contains","target","document","addEventListener","removeEventListener","value","setValue","handleMouseOver","handleMouseOut","node","useHover","hoverRef","isHovered","useClickToggle","toggleRef","isToggled","shouldBeActive","mergeRefs","useSmartToggle","isActive","Error","className","LevelOne","name","content","to"],"sourceRoot":""}