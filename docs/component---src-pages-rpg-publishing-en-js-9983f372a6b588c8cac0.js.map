{"version":3,"file":"component---src-pages-rpg-publishing-en-js-9983f372a6b588c8cac0.js","mappings":"oJACO,I,oBCEDA,EAAW,yCA4DjB,MA1DA,SAAiBC,GAAjB,gBAAiBA,IAAAA,EAAQ,CAAEC,IAAAA,MAA3B,WACE,OAA0BC,EAAAA,EAAAA,WAAS,GAA5BC,EAAP,KAAeC,EAAf,KACA,EAA4BJ,EAApBC,EAAR,EAAQA,IAAR,IAAaI,MAAAA,OAAb,MAAqB,GAArB,EACA,GACEL,EAAMM,eAAe,WACJ,iBAATD,GAA+B,OAAVA,GAAkBE,OAAOC,KAAKH,GAAOI,OAAS,GAE3E,MAAM,IAAIC,MAAM,uCAClB,GAAmB,iBAART,EAET,OADAU,QAAQC,KAAK,IAAIF,MAAM,yBAChB,KAGT,GADAL,EAAMQ,SAAW,GACZd,EAASe,KAAKb,GAAM,MAAM,IAAIS,MAAM,uBACzC,IAAMK,EACJ,iCACAd,EADA,IAGAM,OAAOS,QAAQX,GACZY,KAAI,gBAAEC,EAAF,KAAOC,EAAP,YAAqBD,EAArB,IAA4BE,mBAAmBD,MACnDE,KAAK,KACJC,EAAW,iBAAQtB,GAGzB,cAFOsB,EAAYrB,WACZqB,EAAYC,SAEjB,uCACMD,EADN,CAEEE,UACEC,8DAGAtB,EAaE,KAZF,gBAAC,EAAAuB,SAAD,KACE,uBACEC,QAAS,kBAAMvB,GAAQ,IACvBwB,IACE5B,EAAMM,eAAe,aACjBN,EAAM6B,UADV,8BAEkC5B,EAFlC,iBAIF6B,IAAI,kBAEN,kCAGJ,0BACEN,UDjDY,iCCiDSrB,EAAS,GAAK,oCACnCyB,IAAKzB,EAASY,EAAW,KACzBgB,MAAM,uBACNC,YAAY,IACZC,QAAQ,kCACRC,MAAM,2FACNC,iBAAe,KApDvB,K,4GCDe,SAASC,IACtB,OACE,uBAAKZ,UAAU,cACb,gBAAC,IAAD,KACE,oDACA,wBAAMa,KAAK,cAAcC,QAAQ,gCAEnC,sDACA,2BACA,uBAAKd,UAAU,aACb,gBAAC,IAAD,CAASvB,IAAI,cAAc4B,UAAU,8BADvC,kCAIA,4IAEsB,IACpB,gBAAC,IAAD,CAAML,UAAU,YAAYe,GAAG,eAA/B,eAHF,yIAQE,2BACA,2BATF,+EAU+E,IAC7E,qBACEC,OAAO,SACPhB,UAAU,OACViB,KAAK,kIAHP,QAKK,IAhBP,MAmBA,gBAAC,IAAD,CAAMjB,UAAU,OAAOe,GAAG,eAA1B","sources":["webpack://your-first-rpg/./src/styles/YTVideo.module.scss","webpack://your-first-rpg/./src/components/YTVideo.js","webpack://your-first-rpg/./src/pages/rpg/publishing.en.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport var youtubeContainer = \"YTVideo-module--youtubeContainer--zCB2A\";\nexport var popout = \"YTVideo-module--popout--baHpn\";\nexport var disabled = \"YTVideo-module--disabled--HEa7g\";","import { youtubeContainer, disabled, popout } from '../styles/YTVideo.module.scss'\nimport { useState, Fragment } from 'react'\n\nconst urlRegex = /^[0-9A-Za-z_-]{10}[048AEIMQUYcgkosw]$/i\n\nfunction YTVideo(props = { url }) {\n  const [isOpen, setOpen] = useState(false)\n  const { url, query = {} } = props\n  if (\n    props.hasOwnProperty('query') &&\n    (typeof query != 'object' || query === null || Object.keys(query).length < 1)\n  )\n    throw new Error('Please provide a valid query object')\n  if (typeof url !== 'string') {\n    console.warn(new Error('Expected a video url'))\n    return null\n  }\n  query.autoplay = 1 // Currently autoplay is broken, it is always applied when the video loads, but the video only loads after you click the image and at the moment there's no way to skip clicking the image so we just enforce autoplay for the hot-swapped youtube embed\n  if (!urlRegex.test(url)) throw new Error('This url is invalid')\n  const videoURL =\n    'https://www.youtube.com/embed/' +\n    url +\n    `?` +\n    Object.entries(query)\n      .map(([key, value]) => `${key}=${encodeURIComponent(value)}`)\n      .join('&')\n  const parentProps = { ...props }\n  delete parentProps.url\n  delete parentProps.children\n  return (\n    <div\n      {...parentProps}\n      className={\n        youtubeContainer + ' youtube-container'\n        // 'youtube-container' + (typeof props.className == 'string' ? ' ' + props.className : '')\n      }>\n      {!isOpen ? (\n        <Fragment>\n          <img\n            onClick={() => setOpen(true)}\n            src={\n              props.hasOwnProperty('thumbnail')\n                ? props.thumbnail\n                : `https://img.youtube.com/vi/${url}/hqdefault.jpg`\n            }\n            alt=\"Youtube Video\"\n          />\n          <span>‚ñ∂</span>\n        </Fragment>\n      ) : null}\n      <iframe\n        className={popout + (isOpen ? '' : ' ' + disabled)}\n        src={isOpen ? videoURL : null}\n        title=\"YouTube video player\"\n        frameBorder=\"0\"\n        sandbox=\"allow-scripts allow-same-origin\"\n        allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\n        allowFullScreen\n      />\n    </div>\n  )\n}\n\nexport default YTVideo\n","import Link from '../../components/TranslatedLink'\nimport YTVideo from '../../components/YTVideo'\nimport { Helmet } from 'react-helmet'\n\nexport default function Publishing() {\n  return (\n    <div className=\"publishing\">\n      <Helmet>\n        <title>üèÜ Sharing your RPG</title>\n        <meta name=\"description\" content=\"How to share your RPG game\" />\n      </Helmet>\n      <h2>#4.2 üèÜ Sharing your RPG</h2>\n      <br />\n      <div className=\"introCard\">\n        <YTVideo url=\"_nuS86ITjIM\" thumbnail=\"/images/sanctuary-rpg.jpg\" />\n        Your imagination is your limit\n      </div>\n      <p>\n        Congratulations, that you've learned basic JavaScript you're ready to make your own game! To\n        begin work open the{' '}\n        <Link className=\"to-editor\" to=\"/rpg/editor\">\n          Game Editor\n        </Link>\n        . Make sure to save your URL so you don't lose your game forever! You can share the URL with\n        your friends and they can play your game!\n        <br />\n        <br />\n        Made a cool RPG? Submit a request to have your game featured on this webpage{' '}\n        <a\n          target=\"_blank\"\n          className=\"bold\"\n          href=\"https://github.com/L1lith/Your-First-RPG/issues/new?assignees=&labels=rpg+display&template=display-your-project-on-the-site.md\">\n          here\n        </a>{' '}\n        üòä\n      </p>\n      <Link className=\"next\" to=\"/rpg/editor\">\n        #4.3 üõ†Ô∏è The Game Editor\n      </Link>\n    </div>\n  )\n}\n"],"names":["urlRegex","props","url","useState","isOpen","setOpen","query","hasOwnProperty","Object","keys","length","Error","console","warn","autoplay","test","videoURL","entries","map","key","value","encodeURIComponent","join","parentProps","children","className","youtubeContainer","Fragment","onClick","src","thumbnail","alt","title","frameBorder","sandbox","allow","allowFullScreen","Publishing","name","content","to","target","href"],"sourceRoot":""}