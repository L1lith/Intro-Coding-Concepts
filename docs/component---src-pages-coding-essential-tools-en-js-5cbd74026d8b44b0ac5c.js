"use strict";(self.webpackChunkyour_first_rpg=self.webpackChunkyour_first_rpg||[]).push([[587],{9964:function(e,t,n){var a=n(7487),l=n(7294);t.Z=function(e){return l.createElement(a.Z,Object.assign({definition:"An expression is a piece of code that can be reduced to a single value, like a math equation"},e),e.children||"expression")}},7482:function(e,t,n){var a=n(7487),l=n(7294);t.Z=function(e){return l.createElement(a.Z,Object.assign({definition:"A function is a re-usable piece of code with it's own set of inputs, rules, and outputs. It's like a miniature logic model that saves us time!"},e),e.children||"function")}},1487:function(e,t,n){var a=n(7487),l=n(7294);t.Z=function(e){return l.createElement(a.Z,Object.assign({definition:"Your input is data that goes into your logic model"},e),e.children||"input")}},7412:function(e,t,n){var a=n(7487),l=n(7294);t.Z=function(e){return l.createElement(a.Z,Object.assign({definition:"The JavaScript interpreter is the software that runs your code, like the engine"},e),e.children||"interpreter")}},6839:function(e,t,n){var a=n(7487),l=n(7294);t.Z=function(e){return l.createElement(a.Z,Object.assign({definition:"A variable holds any kind of data you want. They have a label and value."},e),e.children||"variable")}},71:function(e,t,n){n.d(t,{Z:function(){return r}});var a=n(7294),l=n(7294),o=/^[0-9A-Za-z_-]{10}[048AEIMQUYcgkosw]$/i;var r=function(e){return void 0===e&&(e={url:url}),function(){var t=(0,a.useState)(!1),n=t[0],r=t[1],i=e,s=i.url,c=i.query,u=void 0===c?{}:c;if(e.hasOwnProperty("query")&&("object"!=typeof u||null===u||Object.keys(u).length<1))throw new Error("Please provide a valid query object");if("string"!=typeof s)return console.warn(new Error("Expected a video url")),null;if(u.autoplay=1,!o.test(s))throw new Error("This url is invalid");var m="https://www.youtube.com/embed/"+s+"?"+Object.entries(u).map((function(e){var t=e[0],n=e[1];return t+"="+encodeURIComponent(n)})).join("&"),h=Object.assign({},e);return delete h.url,delete h.children,l.createElement("div",Object.assign({},h,{className:"YTVideo-module--youtubeContainer--zCB2A youtube-container"}),n?null:l.createElement(a.Fragment,null,l.createElement("img",{onClick:function(){return r(!0)},src:e.hasOwnProperty("thumbnail")?e.thumbnail:"https://img.youtube.com/vi/"+s+"/hqdefault.jpg",alt:"Youtube Video"}),l.createElement("span",null,"▶")),l.createElement("iframe",{className:n?null:"YTVideo-module--disabled--HEa7g",src:n?m:null,title:"YouTube video player",frameBorder:"0",sandbox:"allow-scripts allow-same-origin",allow:"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture",allowFullScreen:!0}))}()}},9739:function(e,t,n){n.r(t),n.d(t,{default:function(){return g}});var a=n(8851),l=n(9964),o=n(7482),r=n(1487),i=n(7412),s=n(4257),c=n(6839),u=n(7294),m=n(7294);var h=function(){var e=(0,u.useState)(!1),t=e[0],n=e[1];return m.createElement("div",{className:"ShittyChecking-module--checkingExample--f1+bO"},m.createElement("span",{className:"ShittyChecking-module--appTitle--xIu5Y"},"🍎 Accounting"),m.createElement("span",{className:"ShittyChecking-module--balance---cg03"},!0===t?"Balance: Unavailable":m.createElement("button",{onClick:function(){n(!0)}},"View your Balance")),m.createElement("span",{className:"ShittyChecking-module--info--KNkbV"},!0!==t?null:"Please close the app and wait for your next transaction notification."))},d=n(2472),p=n(71),E=n(5414),f=n(7294);function g(){return f.createElement("div",null,f.createElement(E.q,null,f.createElement("title",null,"🔨 Essential Tools")),f.createElement("h1",null,"#3.2 🔨 Essential Tools"),f.createElement("span",{className:"introCard"},f.createElement(p.Z,{url:"himmatLe7aQ",query:{start:32},thumbnail:"/images/melinda-mae.jpg"}),f.createElement("span",null,"How do you swallow a coding lesson? One byte at a time")),f.createElement("p",null,"You probably have a lot of information in your head from the last section, try to do your best to connect that information with the upcoming tasks. In this section we will be learning some tools 🔨 to help us build logic models in JavaScript more effectively. Once you finish this section you will know basic coding! If you feel overwhelmed consider taking a break.",f.createElement("br",null),f.createElement("br",null),"We will also be using terminal mode instead of the ",f.createElement(l.Z,null),' evaluator mode in our editors, so you\'ll be seeing some things that say "console.log(...)", and our program output will be whatever is inside the parenthesis (this is called a ',f.createElement(o.Z,null),", there is more on this below)."),f.createElement("div",null,f.createElement("h2",null,"Variables"),f.createElement("p",null,"We can create ",f.createElement(c.Z,null,"variables")," in order to store (save) data values for later use. In a basic logic model where we only have ",f.createElement(r.Z,null,"inputs")," and"," ",f.createElement(s.Z,null,"outputs"),", so it becomes incredibly difficult to deal with data that persists (needs to be saved). Let's say you're writing a checking account app, but you're not allowed to save any data. The user might see a notification saying \"You just spent $10.52\", and yet every time they open the app they're greeted with this"," ",f.createElement("span",{className:"bold"},"(try using the app below)")),f.createElement(h,null),f.createElement("p",null,"This would be so annoying! Instead of doing this we store ",f.createElement(c.Z,null,"variables")," ","in our memory (or in this case the computer's memory) by giving them names, and then we can retrieve or modify them later when we need them.",f.createElement("br",null),f.createElement("br",null),"Here we name a ",f.createElement(c.Z,null)," called balance (note we do not give it any value yet so it defaults to undefined)"),f.createElement(a.Z,{className:"mini",value:"var balance\nconsole.log(balance)",consoleMode:!0}),f.createElement("p",null,'We can set a value by using the assignment operator "=" and putting the value we want after it, and once we have done this we can see our ',f.createElement(c.Z,null)," has a value now :)"),f.createElement(a.Z,{className:"mini",value:"var balance = 14.24\nconsole.log(balance)",consoleMode:!0})),f.createElement("div",{className:"functions"},f.createElement("h2",null,"Functions"),f.createElement("p",null,f.createElement(o.Z,null,"Functions")," let you make re-usable pieces of code that serve as a tool (like a blueprint of how to do something). ",f.createElement(o.Z,null,"Functions")," have a name, a set of ",f.createElement(r.Z,null,"inputs"),", a code section, and an ",f.createElement(s.Z,null,"output"),' (we use "return" to specify the output). ',f.createElement(o.Z,null,"Functions")," can save you a lot of time because you can re-use your function multiple times with different inputs, rather than having to write that piece of code over and over."," ",f.createElement(o.Z,null,"Functions")," use parenthesis to create their inputs, and brackets (they look like this ","{}","). After we've created our ",f.createElement(o.Z,null)," we use parenthesis again to call it (calling a ",f.createElement(o.Z,null),' means to run it) The "console.log" part of our code is an example of a function (in this case to ',f.createElement(s.Z,null)," some data). This"," ",f.createElement(o.Z,null)," doesn't have to be created by us because it's given to us automatically by the ",f.createElement(i.Z,null,"JS interpreter"),". It's called (to call a ",f.createElement(o.Z,null)," ","means to run it) with parenthesis and it can do different things depending on what the"," ",f.createElement(r.Z,null)," we put inside it is (which in the previous example was the balance"," ",f.createElement(c.Z,null,"variable's")," current value)."),f.createElement("h2",null,"Addition Function"),f.createElement("p",null,"While this ",f.createElement(o.Z,null)," is mostly redundant, you could easily make a ",f.createElement(o.Z,null)," to add two numbers together."),f.createElement(a.Z,{consoleMode:!0,value:"function add(a, b){\n    return a + b\n}",className:"short"}),f.createElement("p",null,"The ",f.createElement(s.Z,null)," is empty because we didn't log anything to the console.")),f.createElement("div",{className:"console"},f.createElement("h2",null,"More about the Console"),'On the previous page I was using the "JavaScript Expression Evaluator". On the right you would see what ',f.createElement(s.Z,null)," of the ",f.createElement(i.Z,null,"JS interpreter")," evaluating the code on the left side. Normally when we're coding we are running our code from a terminal, and we see the ",f.createElement(s.Z,null)," of the console.log ",f.createElement(o.Z,null)," in real-time instead of seeing the ",f.createElement(s.Z,null)," of the JS evaluation. We only need to ",f.createElement(s.Z,null)," values using console.log when we as the developer (or coder) want to know what those values are, that way our program's ",f.createElement(s.Z,null)," doesn't get super cluttered."),f.createElement(a.Z,{consoleMode:!0,value:"function add(a, b){\n    return a + b\n}\nconsole.log(add(14, 16))",className:"short"}),f.createElement("div",{className:"parenthesis"},f.createElement("h2",null,"Parenthesis"),"Not only can you use parenthesis to change the ordering of math"," ",f.createElement(l.Z,null,"expressions"),", but you can also use parenthesis to change the ordering of any other kind of ",f.createElement(l.Z,null),". Here are some example of changing the order of code evaluation using parenthesis for math and non-math purposes.",f.createElement("br",null),f.createElement("br",null),f.createElement("h3",null,"Math Without Parenthesis"),f.createElement(a.Z,{consoleMode:!0,value:"console.log(10 * 3 + 4)",className:"mini"}),f.createElement("h3",null,"Math With Parenthesis"),f.createElement(a.Z,{consoleMode:!0,value:"console.log(10 * (3 + 4))",className:"mini"}),f.createElement("h3",null,"Boolean logic without Parenthesis"),f.createElement(a.Z,{consoleMode:!0,value:"console.log(false && true || true)",className:"mini"}),f.createElement("h3",null,"Boolean logic with Parenthesis"),f.createElement(a.Z,{consoleMode:!0,value:"console.log(false && (true || true))",className:"mini"})),f.createElement("br",null),f.createElement(d.Z,{to:"/rpg"},f.createElement("a",{className:"next"},"Next: #4.0 Building your Text RPG")))}}}]);
//# sourceMappingURL=component---src-pages-coding-essential-tools-en-js-5cbd74026d8b44b0ac5c.js.map