_N_E=(window.webpackJsonp_N_E=window.webpackJsonp_N_E||[]).push([[17],{LmDw:function(e,t,o){"use strict";o.r(t);var n=o("q1tI"),a=o.n(n),i=o("YFqc"),r=o.n(i),s=o("+X84"),l=o("9ixD"),u=a.a.createElement;t.default=function(){return u("div",{className:"logic-models"},u(l.b,{title:"#3.3 Text RPG Tutorial \u2694\ufe0f"}),u("h2",null,"#3.3 Text RPG Tutorial \u2694\ufe0f"),u("span",{className:"intro-card"},u("div",{className:"youtube-container"},u("iframe",{src:"https://www.youtube.com/embed/7yeA7a0uS3A?start=29",title:"YouTube video player",frameBorder:"0",allow:"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture",allowFullScreen:!0})),"Half-dragon half-tiger sold separately"),u("p",null,"Now that we've laid out the basics, let's apply ourselves and have some fun \ud83d\ude0a To complete your introduction to coding you will build your own text-based RPG. Before we do that though we must learn a few more features."),u("div",{className:"comments"},u("h2",null,"Comments"),u("p",null,'Comments allow us to write things in our code that is purely for notation (like writing notes in your math). Anything in the same line that comes after "//" will not be treated as part of the code'),u(s.a,{value:"alert('aesop rock is awesome') // This part doesn't have to be valid JavaScript code",consoleMode:!0,disableAutoRun:!0})),u("div",{className:"js-io"},u("h2",null,"Basic Website Input/Output"),u("p",null,"While modifying the content of a webpage (done via HTML) is outside of the scope of this project, we can still communicate with the user from inside JavaScript! We can do this using the prompt and alert functions. I've disabled auto-running so it won't spam you with prompts, but from now on you must manually run the code. Try running the examples below:"),u("h3",null,"Output: Alert"),u(s.a,{value:"alert('Your princess is in another castle')",consoleMode:!0,disableAutoRun:!0}),u("h3",null,"Input: Prompt"),u("p",null,"We can ask a user for input and save it to a variable to use it later"),u(s.a,{value:"var user = prompt('What is your name?')\nalert('Wishing ' + user + ' good fortune \ud83d\udcb0')",consoleMode:!0,disableAutoRun:!0}),u("p",null,"Note: In normal web development the use of the alert and prompt functions is discouraged. This is because creating dialogue inside of the page (using HTML) rather than inside of the browsers pop-up boxes is less jarring.")),u("div",{className:"flow-control"},u("h2",null,"Flow Control"),u("p",null,'Flow control allows us to establish branching choices in our logic model using boolean logic. You might say something along the lines of "if x is true then do y, or else do z". It allows us to create flexible code that chooses the appropriate path to take in order to properly complete the task. You can read more about flow control'," ",u("a",{href:"https://exploringjs.com/impatient-js/ch_control-flow.html"},"here.")),u("h3",null,"if/else"),u("p",null,"You can use combinations of if and else to make powerful decision making models. Here we have an example of doing something based on the user's input"),u(s.a,{value:'// Notice that any spaces or uppercases will cause the equality to fail, so "YES" will give the wrong result\nif(prompt("Do you like oatmeal raisin cookies?") === "yes") { \n    alert("You have good taste in \ud83c\udf6a")\n} else { // They entered anything besides exactly "yes"\n    alert("Maybe \ud83c\udf6a just aren\'t your thing?")\n}',consoleMode:!0,disableAutoRun:!0}),u("p",null,"We can also chain multiple ifs together to have multiple outcomes"),u(s.a,{value:'var favoriteCookie = prompt("What\'s your favorite kind of cookie?")\nif(favoriteCookie === "oatmeal" || favoriteCookie === "oatmeal raisin") { \n    alert("You have good taste in \ud83c\udf6a")\n} else if (favoriteCookie === "chocolate chip") {\n    alert("Chocolate chip is the second best cookie so that\'s understandable")\n} else {\n    alert("Maybe \ud83c\udf6a just aren\'t your thing?")\n}',consoleMode:!0,disableAutoRun:!0}),u("h3",null,"while"),u("p",null,"You can use the while loop to keep doing something until the boolean expression returns false. Look here how we can repeatedly ask the user for their name until they return a valid name (if a name is missing it is invalid, if the user exits the prompt the prompt it returns null so we must retry)."),u(s.a,{disableAutoRun:!0,consoleMode:!0,value:'var name\nwhile(!name) {\n    name = prompt("What is your name adventurer?")\n}\nalert("You wake up on a strange beach. \'" + name + "\' is written on the inside of your shirt.")'})),u("div",null,u("h2",null,"Better text Handling"),u("p",null,"I've created this function to help you ensure you receive valid input. Strings provide .trim(...) function to remove all spaces from the beginning and end. Here we check that the trimmed string is at least 1 character long (meaning that there's at least 1 non-space character). Then we return the trimmed string as we probably don't care about them and it can make it harder to match strings later (for example \"yes \" === \"yes\" will return false, but if we trim the text we don't have this problem)"),u(s.a,{disableAutoRun:!0,consoleMode:!0,value:'function smartPrompt(question) {\n    var output = null\n    while(output === null || output.trim().length < 1) {\n        output = prompt(question)\n    }\n    return output.trim()\n}\n\nvar name = smartPrompt("What is your name adventurer?")\n\nalert("You wake up on a strange beach. \'" + name + "\' is written on the inside of your shirt.")'}),u("p",null,"Here we combine the .toLowerCase function (it's available to all strings) and our smartPrompt function. Notice how when we run it it still recognizes a yes input even if it has whitespace around it or isn't lowercase."),u(s.a,{value:'function smartPrompt(question) {\n    var output = null\n    while(output === null || output.trim().length < 1) {\n        output = prompt(question)\n    }\n    return output.trim()\n}\n// Now it accepts "  yes  ", "YES", "  yEs   ", etc\nif(smartPrompt("Do you like oatmeal raisin cookies?").toLowerCase() === "yes") { \n    alert("You have good taste in \ud83c\udf6a")\n} else {\n    alert("Maybe \ud83c\udf6a just aren\'t your thing?")\n}',consoleMode:!0,disableAutoRun:!0})),u(r.a,{href:"/coding/rpg-publishing"},u("a",{className:"next"},"Up next: Publishing your RPG")))}},mruH:function(e,t,o){(window.__NEXT_P=window.__NEXT_P||[]).push(["/coding/text-rpg",function(){return o("LmDw")}])}},[["mruH",0,1,7,6,2,3,8]]]);